<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_30) on Tue Mar 06 10:15:22 CST 2012 -->
<TITLE>
Message
</TITLE>

<META NAME="date" CONTENT="2012-03-06">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Message";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/uit/bee/hl7/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Message.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../../../com/uit/bee/hl7/Segment.html" title="class in com.uit.bee.hl7"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?com/uit/bee/hl7/Message.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Message.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.uit.bee.hl7</FONT>
<BR>
Class Message</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>com.uit.bee.hl7.Message</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>Message</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
Parse HL7 message into Matrix Object
 This class stands for a HL7 message
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Wang Gang</DD>
</DL>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#Message(java.lang.String)">Message</A></B>(java.lang.String&nbsp;msg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#clear()">clear</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clear the message content</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#copy(java.lang.String, int, int)">copy</A></B>(java.lang.String&nbsp;segment,
     int&nbsp;from,
     int&nbsp;to)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;copy value in same segment</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#copy(java.lang.String, int, java.lang.String, int)">copy</A></B>(java.lang.String&nbsp;fromSeg,
     int&nbsp;fromIdx,
     java.lang.String&nbsp;toSeg,
     int&nbsp;toIdx)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copy value between different segment</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/uit/bee/hl7/Segment.html" title="class in com.uit.bee.hl7">Segment</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#get(int)">get</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get a segment by index</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/uit/bee/hl7/Segment.html" title="class in com.uit.bee.hl7">Segment</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#get(java.lang.String)">get</A></B>(java.lang.String&nbsp;segment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get a segment by segment name</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getAllIndex(java.lang.String)">getAllIndex</A></B>(java.lang.String&nbsp;segment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get all index array of a specified segment</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getCount(java.lang.String)">getCount</A></B>(java.lang.String&nbsp;segment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get sum of a specified segment</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getCount(java.lang.String, int)">getCount</A></B>(java.lang.String&nbsp;segment,
         int&nbsp;from)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get sum of a segment from specified index</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getCount(java.lang.String, int, int)">getCount</A></B>(java.lang.String&nbsp;segment,
         int&nbsp;from,
         int&nbsp;to)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get sum of a segment from specified index range [from,to)</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getIndex(java.lang.String)">getIndex</A></B>(java.lang.String&nbsp;segment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get segment index number by segment name</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getLastIndex(java.lang.String)">getLastIndex</A></B>(java.lang.String&nbsp;segment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get last index number from duplicate segments</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getLastValue(java.lang.String, int)">getLastValue</A></B>(java.lang.String&nbsp;segment,
             int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get value of last cell from duplicate segments</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getLastValue(java.lang.String, int, int)">getLastValue</A></B>(java.lang.String&nbsp;segment,
             int&nbsp;index,
             int&nbsp;subIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get value of the last sub-cell from duplicate segments</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getSize()">getSize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get segment size</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getValue(int, java.lang.String, int)">getValue</A></B>(int&nbsp;No,
         java.lang.String&nbsp;segment,
         int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get No.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getValue(int, java.lang.String, int, int)">getValue</A></B>(int&nbsp;No,
         java.lang.String&nbsp;segment,
         int&nbsp;index,
         int&nbsp;subIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get value of sub-cell from #No.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getValue(java.lang.String, int)">getValue</A></B>(java.lang.String&nbsp;segment,
         int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get first cell value in specified segment</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#getValue(java.lang.String, int, int)">getValue</A></B>(java.lang.String&nbsp;segment,
         int&nbsp;index,
         int&nbsp;subIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get fisrt cell value for spcified segment</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#insertAfter(java.lang.String, com.uit.bee.hl7.Segment)">insertAfter</A></B>(java.lang.String&nbsp;segment,
            <A HREF="../../../../com/uit/bee/hl7/Segment.html" title="class in com.uit.bee.hl7">Segment</A>&nbsp;line)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Insert segment after specified one</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#insertAt(int, com.uit.bee.hl7.Segment)">insertAt</A></B>(int&nbsp;index,
         <A HREF="../../../../com/uit/bee/hl7/Segment.html" title="class in com.uit.bee.hl7">Segment</A>&nbsp;line)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Insert segment at specified index</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#insertBefore(java.lang.String, com.uit.bee.hl7.Segment)">insertBefore</A></B>(java.lang.String&nbsp;segment,
             <A HREF="../../../../com/uit/bee/hl7/Segment.html" title="class in com.uit.bee.hl7">Segment</A>&nbsp;line)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Insert segment before specified one</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#isEmpty()">isEmpty</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whether the content is empty</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#isExist(java.lang.String)">isExist</A></B>(java.lang.String&nbsp;segment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check specified segment exists</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#move(java.lang.String, int, int)">move</A></B>(java.lang.String&nbsp;segment,
     int&nbsp;from,
     int&nbsp;to)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Move a value to somewhere else in same segment</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#move(java.lang.String, int, java.lang.String, int)">move</A></B>(java.lang.String&nbsp;fromSeg,
     int&nbsp;fromIdx,
     java.lang.String&nbsp;toSeg,
     int&nbsp;toIdx)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Move a value to somewhere between different segments</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#remove(int)">remove</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delete a segment by index</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#remove(java.lang.String)">remove</A></B>(java.lang.String&nbsp;segment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delete first segment by segment name</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#removeAll(java.lang.String)">removeAll</A></B>(java.lang.String&nbsp;segment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delete all segments which name are segment</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#removeFirst(java.lang.String)">removeFirst</A></B>(java.lang.String&nbsp;segment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delete the first segment which name is segment</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#removeLast(java.lang.String)">removeLast</A></B>(java.lang.String&nbsp;segment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delete the last segment which name is segment</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#setAllValue(java.lang.String, int, int, java.lang.String)">setAllValue</A></B>(java.lang.String&nbsp;segment,
            int&nbsp;index,
            int&nbsp;subIndex,
            java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set all value for specified sub-cell</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#setAllValue(java.lang.String, int, java.lang.String)">setAllValue</A></B>(java.lang.String&nbsp;segment,
            int&nbsp;index,
            java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set value for all cells in specified  segment</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#setLastValue(java.lang.String, int, int, java.lang.String)">setLastValue</A></B>(java.lang.String&nbsp;segment,
             int&nbsp;index,
             int&nbsp;subIndex,
             java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set value for specified sub-cell</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#setLastValue(java.lang.String, int, java.lang.String)">setLastValue</A></B>(java.lang.String&nbsp;segment,
             int&nbsp;index,
             java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set value for last specified cell</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#setValue(int, int, java.lang.String, int, java.lang.String)">setValue</A></B>(int&nbsp;from,
         int&nbsp;No,
         java.lang.String&nbsp;segment,
         int&nbsp;index,
         java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set value for No.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#setValue(int, java.lang.String, int, int, java.lang.String)">setValue</A></B>(int&nbsp;No,
         java.lang.String&nbsp;segment,
         int&nbsp;index,
         int&nbsp;subIndex,
         java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set No.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#setValue(int, java.lang.String, int, java.lang.String)">setValue</A></B>(int&nbsp;No,
         java.lang.String&nbsp;segment,
         int&nbsp;index,
         java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set value for No.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#setValue(java.lang.String, int, int, java.lang.String)">setValue</A></B>(java.lang.String&nbsp;segment,
         int&nbsp;index,
         int&nbsp;subIndex,
         java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the first cell's value for sub-cell</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#setValue(java.lang.String, int, java.lang.String)">setValue</A></B>(java.lang.String&nbsp;segment,
         int&nbsp;index,
         java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set value for specified cell value</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#toHex()">toHex</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Output Hex format's HL7 message</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/uit/bee/hl7/Message.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HL7 Message String</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>equals, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="Message(java.lang.String)"><!-- --></A><H3>
Message</H3>
<PRE>
public <B>Message</B>(java.lang.String&nbsp;msg)</PRE>
<DL>
<DD>Constructor
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>msg</CODE> - hl7 message string</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="clear()"><!-- --></A><H3>
clear</H3>
<PRE>
public void <B>clear</B>()</PRE>
<DL>
<DD>Clear the message content
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isEmpty()"><!-- --></A><H3>
isEmpty</H3>
<PRE>
public boolean <B>isEmpty</B>()</PRE>
<DL>
<DD>whether the content is empty
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true if content is empty</DL>
</DD>
</DL>
<HR>

<A NAME="remove(java.lang.String)"><!-- --></A><H3>
remove</H3>
<PRE>
public void <B>remove</B>(java.lang.String&nbsp;segment)</PRE>
<DL>
<DD>Delete first segment by segment name
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name</DL>
</DD>
</DL>
<HR>

<A NAME="remove(int)"><!-- --></A><H3>
remove</H3>
<PRE>
public void <B>remove</B>(int&nbsp;index)</PRE>
<DL>
<DD>Delete a segment by index
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - segment index start from 0</DL>
</DD>
</DL>
<HR>

<A NAME="removeAll(java.lang.String)"><!-- --></A><H3>
removeAll</H3>
<PRE>
public void <B>removeAll</B>(java.lang.String&nbsp;segment)</PRE>
<DL>
<DD>Delete all segments which name are segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name</DL>
</DD>
</DL>
<HR>

<A NAME="removeFirst(java.lang.String)"><!-- --></A><H3>
removeFirst</H3>
<PRE>
public void <B>removeFirst</B>(java.lang.String&nbsp;segment)</PRE>
<DL>
<DD>Delete the first segment which name is segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - </DL>
</DD>
</DL>
<HR>

<A NAME="removeLast(java.lang.String)"><!-- --></A><H3>
removeLast</H3>
<PRE>
public void <B>removeLast</B>(java.lang.String&nbsp;segment)</PRE>
<DL>
<DD>Delete the last segment which name is segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name</DL>
</DD>
</DL>
<HR>

<A NAME="setValue(java.lang.String, int, java.lang.String)"><!-- --></A><H3>
setValue</H3>
<PRE>
public void <B>setValue</B>(java.lang.String&nbsp;segment,
                     int&nbsp;index,
                     java.lang.String&nbsp;value)</PRE>
<DL>
<DD>Set value for specified cell value
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for the specified cell<DD><CODE>value</CODE> - new value to be set</DL>
</DD>
</DL>
<HR>

<A NAME="setValue(int, java.lang.String, int, java.lang.String)"><!-- --></A><H3>
setValue</H3>
<PRE>
public void <B>setValue</B>(int&nbsp;No,
                     java.lang.String&nbsp;segment,
                     int&nbsp;index,
                     java.lang.String&nbsp;value)</PRE>
<DL>
<DD>Set value for No. cell which name is segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>No</CODE> - which one to be set from duplicate cells<DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for the specified cell<DD><CODE>value</CODE> - new value</DL>
</DD>
</DL>
<HR>

<A NAME="setValue(int, int, java.lang.String, int, java.lang.String)"><!-- --></A><H3>
setValue</H3>
<PRE>
public void <B>setValue</B>(int&nbsp;from,
                     int&nbsp;No,
                     java.lang.String&nbsp;segment,
                     int&nbsp;index,
                     java.lang.String&nbsp;value)</PRE>
<DL>
<DD>Set value for No. cell which name is segment starting from specified index -- from
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>from</CODE> - which one to begin search<DD><CODE>No</CODE> - which one to be set from duplicate cells<DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for the specified cell<DD><CODE>value</CODE> - new value</DL>
</DD>
</DL>
<HR>

<A NAME="setValue(java.lang.String, int, int, java.lang.String)"><!-- --></A><H3>
setValue</H3>
<PRE>
public void <B>setValue</B>(java.lang.String&nbsp;segment,
                     int&nbsp;index,
                     int&nbsp;subIndex,
                     java.lang.String&nbsp;value)</PRE>
<DL>
<DD>Set the first cell's value for sub-cell
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for the specified cell<DD><CODE>subIndex</CODE> - index for the specified sub-cell<DD><CODE>value</CODE> - new value</DL>
</DD>
</DL>
<HR>

<A NAME="setValue(int, java.lang.String, int, int, java.lang.String)"><!-- --></A><H3>
setValue</H3>
<PRE>
public void <B>setValue</B>(int&nbsp;No,
                     java.lang.String&nbsp;segment,
                     int&nbsp;index,
                     int&nbsp;subIndex,
                     java.lang.String&nbsp;value)</PRE>
<DL>
<DD>Set No. sub-cell's value in specified cell
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>No</CODE> - which one to be set from duplicate cells<DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for the specified cell<DD><CODE>subIndex</CODE> - index in the specified sub-cell<DD><CODE>value</CODE> - new value</DL>
</DD>
</DL>
<HR>

<A NAME="setLastValue(java.lang.String, int, java.lang.String)"><!-- --></A><H3>
setLastValue</H3>
<PRE>
public void <B>setLastValue</B>(java.lang.String&nbsp;segment,
                         int&nbsp;index,
                         java.lang.String&nbsp;value)</PRE>
<DL>
<DD>Set value for last specified cell
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for the specified cell<DD><CODE>value</CODE> - new value</DL>
</DD>
</DL>
<HR>

<A NAME="setLastValue(java.lang.String, int, int, java.lang.String)"><!-- --></A><H3>
setLastValue</H3>
<PRE>
public void <B>setLastValue</B>(java.lang.String&nbsp;segment,
                         int&nbsp;index,
                         int&nbsp;subIndex,
                         java.lang.String&nbsp;value)</PRE>
<DL>
<DD>Set value for specified sub-cell
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for specified cell<DD><CODE>subIndex</CODE> - index for specified sub-cell<DD><CODE>value</CODE> - new value</DL>
</DD>
</DL>
<HR>

<A NAME="setAllValue(java.lang.String, int, java.lang.String)"><!-- --></A><H3>
setAllValue</H3>
<PRE>
public void <B>setAllValue</B>(java.lang.String&nbsp;segment,
                        int&nbsp;index,
                        java.lang.String&nbsp;value)</PRE>
<DL>
<DD>Set value for all cells in specified  segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for the specified cell<DD><CODE>value</CODE> - new value</DL>
</DD>
</DL>
<HR>

<A NAME="setAllValue(java.lang.String, int, int, java.lang.String)"><!-- --></A><H3>
setAllValue</H3>
<PRE>
public void <B>setAllValue</B>(java.lang.String&nbsp;segment,
                        int&nbsp;index,
                        int&nbsp;subIndex,
                        java.lang.String&nbsp;value)</PRE>
<DL>
<DD>Set all value for specified sub-cell
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for specified cell<DD><CODE>subIndex</CODE> - index for specified sub-cell<DD><CODE>value</CODE> - new value</DL>
</DD>
</DL>
<HR>

<A NAME="getValue(java.lang.String, int)"><!-- --></A><H3>
getValue</H3>
<PRE>
public java.lang.String <B>getValue</B>(java.lang.String&nbsp;segment,
                                 int&nbsp;index)</PRE>
<DL>
<DD>Get first cell value in specified segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for specified cell
<DT><B>Returns:</B><DD>String cell value</DL>
</DD>
</DL>
<HR>

<A NAME="getValue(int, java.lang.String, int)"><!-- --></A><H3>
getValue</H3>
<PRE>
public java.lang.String <B>getValue</B>(int&nbsp;No,
                                 java.lang.String&nbsp;segment,
                                 int&nbsp;index)</PRE>
<DL>
<DD>Get No. cell value in specified segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>No</CODE> - which one to be set from duplicate cells<DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for specified cell
<DT><B>Returns:</B><DD>int</DL>
</DD>
</DL>
<HR>

<A NAME="getValue(java.lang.String, int, int)"><!-- --></A><H3>
getValue</H3>
<PRE>
public java.lang.String <B>getValue</B>(java.lang.String&nbsp;segment,
                                 int&nbsp;index,
                                 int&nbsp;subIndex)</PRE>
<DL>
<DD>Get fisrt cell value for spcified segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for specified cell<DD><CODE>subIndex</CODE> - index for specified sub-cell
<DT><B>Returns:</B><DD>String  cell value</DL>
</DD>
</DL>
<HR>

<A NAME="getValue(int, java.lang.String, int, int)"><!-- --></A><H3>
getValue</H3>
<PRE>
public java.lang.String <B>getValue</B>(int&nbsp;No,
                                 java.lang.String&nbsp;segment,
                                 int&nbsp;index,
                                 int&nbsp;subIndex)</PRE>
<DL>
<DD>Get value of sub-cell from #No. segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>No</CODE> - number<DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for specified cell<DD><CODE>subIndex</CODE> - sub-index of element
<DT><B>Returns:</B><DD>String cell value</DL>
</DD>
</DL>
<HR>

<A NAME="getLastValue(java.lang.String, int)"><!-- --></A><H3>
getLastValue</H3>
<PRE>
public java.lang.String <B>getLastValue</B>(java.lang.String&nbsp;segment,
                                     int&nbsp;index)</PRE>
<DL>
<DD>Get value of last cell from duplicate segments
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for specified cell
<DT><B>Returns:</B><DD>String cell value</DL>
</DD>
</DL>
<HR>

<A NAME="getLastValue(java.lang.String, int, int)"><!-- --></A><H3>
getLastValue</H3>
<PRE>
public java.lang.String <B>getLastValue</B>(java.lang.String&nbsp;segment,
                                     int&nbsp;index,
                                     int&nbsp;subIndex)</PRE>
<DL>
<DD>Get value of the last sub-cell from duplicate segments
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>index</CODE> - index for specified cell<DD><CODE>subIndex</CODE> - index for specified sub-cell
<DT><B>Returns:</B><DD>String value of sub-cell</DL>
</DD>
</DL>
<HR>

<A NAME="copy(java.lang.String, int, int)"><!-- --></A><H3>
copy</H3>
<PRE>
public void <B>copy</B>(java.lang.String&nbsp;segment,
                 int&nbsp;from,
                 int&nbsp;to)</PRE>
<DL>
<DD>copy value in same segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>from</CODE> - source cell index<DD><CODE>to</CODE> - target cell index</DL>
</DD>
</DL>
<HR>

<A NAME="copy(java.lang.String, int, java.lang.String, int)"><!-- --></A><H3>
copy</H3>
<PRE>
public void <B>copy</B>(java.lang.String&nbsp;fromSeg,
                 int&nbsp;fromIdx,
                 java.lang.String&nbsp;toSeg,
                 int&nbsp;toIdx)</PRE>
<DL>
<DD>Copy value between different segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>fromSeg</CODE> - source segment name<DD><CODE>toSeg</CODE> - target segment name<DD><CODE>fromIdx</CODE> - source cell index<DD><CODE>toIdx</CODE> - target cell index</DL>
</DD>
</DL>
<HR>

<A NAME="move(java.lang.String, int, int)"><!-- --></A><H3>
move</H3>
<PRE>
public void <B>move</B>(java.lang.String&nbsp;segment,
                 int&nbsp;from,
                 int&nbsp;to)</PRE>
<DL>
<DD>Move a value to somewhere else in same segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>from</CODE> - source index<DD><CODE>to</CODE> - target index</DL>
</DD>
</DL>
<HR>

<A NAME="move(java.lang.String, int, java.lang.String, int)"><!-- --></A><H3>
move</H3>
<PRE>
public void <B>move</B>(java.lang.String&nbsp;fromSeg,
                 int&nbsp;fromIdx,
                 java.lang.String&nbsp;toSeg,
                 int&nbsp;toIdx)</PRE>
<DL>
<DD>Move a value to somewhere between different segments
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>fromSeg</CODE> - source segment name<DD><CODE>fromIdx</CODE> - source cell index<DD><CODE>toSeg</CODE> - target segment name<DD><CODE>toIdx</CODE> - target cell index</DL>
</DD>
</DL>
<HR>

<A NAME="get(java.lang.String)"><!-- --></A><H3>
get</H3>
<PRE>
public <A HREF="../../../../com/uit/bee/hl7/Segment.html" title="class in com.uit.bee.hl7">Segment</A> <B>get</B>(java.lang.String&nbsp;segment)</PRE>
<DL>
<DD>Get a segment by segment name
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name
<DT><B>Returns:</B><DD>Section  segment</DL>
</DD>
</DL>
<HR>

<A NAME="get(int)"><!-- --></A><H3>
get</H3>
<PRE>
public <A HREF="../../../../com/uit/bee/hl7/Segment.html" title="class in com.uit.bee.hl7">Segment</A> <B>get</B>(int&nbsp;index)</PRE>
<DL>
<DD>Get a segment by index
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - segment index
<DT><B>Returns:</B><DD>Section  a segment</DL>
</DD>
</DL>
<HR>

<A NAME="getIndex(java.lang.String)"><!-- --></A><H3>
getIndex</H3>
<PRE>
public int <B>getIndex</B>(java.lang.String&nbsp;segment)</PRE>
<DL>
<DD>Get segment index number by segment name
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name
<DT><B>Returns:</B><DD>int     segment index</DL>
</DD>
</DL>
<HR>

<A NAME="getLastIndex(java.lang.String)"><!-- --></A><H3>
getLastIndex</H3>
<PRE>
public int <B>getLastIndex</B>(java.lang.String&nbsp;segment)</PRE>
<DL>
<DD>Get last index number from duplicate segments
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name
<DT><B>Returns:</B><DD>int    last segment index</DL>
</DD>
</DL>
<HR>

<A NAME="getAllIndex(java.lang.String)"><!-- --></A><H3>
getAllIndex</H3>
<PRE>
public int[] <B>getAllIndex</B>(java.lang.String&nbsp;segment)</PRE>
<DL>
<DD>Get all index array of a specified segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name
<DT><B>Returns:</B><DD>array   index array</DL>
</DD>
</DL>
<HR>

<A NAME="insertAt(int, com.uit.bee.hl7.Segment)"><!-- --></A><H3>
insertAt</H3>
<PRE>
public void <B>insertAt</B>(int&nbsp;index,
                     <A HREF="../../../../com/uit/bee/hl7/Segment.html" title="class in com.uit.bee.hl7">Segment</A>&nbsp;line)</PRE>
<DL>
<DD>Insert segment at specified index
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - index position<DD><CODE>line</CODE> - segment</DL>
</DD>
</DL>
<HR>

<A NAME="insertAfter(java.lang.String, com.uit.bee.hl7.Segment)"><!-- --></A><H3>
insertAfter</H3>
<PRE>
public void <B>insertAfter</B>(java.lang.String&nbsp;segment,
                        <A HREF="../../../../com/uit/bee/hl7/Segment.html" title="class in com.uit.bee.hl7">Segment</A>&nbsp;line)</PRE>
<DL>
<DD>Insert segment after specified one
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>line</CODE> - segment</DL>
</DD>
</DL>
<HR>

<A NAME="insertBefore(java.lang.String, com.uit.bee.hl7.Segment)"><!-- --></A><H3>
insertBefore</H3>
<PRE>
public void <B>insertBefore</B>(java.lang.String&nbsp;segment,
                         <A HREF="../../../../com/uit/bee/hl7/Segment.html" title="class in com.uit.bee.hl7">Segment</A>&nbsp;line)</PRE>
<DL>
<DD>Insert segment before specified one
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>line</CODE> - segment</DL>
</DD>
</DL>
<HR>

<A NAME="isExist(java.lang.String)"><!-- --></A><H3>
isExist</H3>
<PRE>
public boolean <B>isExist</B>(java.lang.String&nbsp;segment)</PRE>
<DL>
<DD>Check specified segment exists
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name
<DT><B>Returns:</B><DD>boolean  true  has such segment
                  false  no such segment</DL>
</DD>
</DL>
<HR>

<A NAME="getSize()"><!-- --></A><H3>
getSize</H3>
<PRE>
public int <B>getSize</B>()</PRE>
<DL>
<DD>Get segment size
<P>
<DD><DL>

<DT><B>Returns:</B><DD>int   total segment</DL>
</DD>
</DL>
<HR>

<A NAME="getCount(java.lang.String)"><!-- --></A><H3>
getCount</H3>
<PRE>
public int <B>getCount</B>(java.lang.String&nbsp;segment)</PRE>
<DL>
<DD>Get sum of a specified segment
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name
<DT><B>Returns:</B><DD>int  total size</DL>
</DD>
</DL>
<HR>

<A NAME="getCount(java.lang.String, int)"><!-- --></A><H3>
getCount</H3>
<PRE>
public int <B>getCount</B>(java.lang.String&nbsp;segment,
                    int&nbsp;from)</PRE>
<DL>
<DD>Get sum of a segment from specified index
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>from</CODE> - starting index
<DT><B>Returns:</B><DD>int</DL>
</DD>
</DL>
<HR>

<A NAME="getCount(java.lang.String, int, int)"><!-- --></A><H3>
getCount</H3>
<PRE>
public int <B>getCount</B>(java.lang.String&nbsp;segment,
                    int&nbsp;from,
                    int&nbsp;to)</PRE>
<DL>
<DD>Get sum of a segment from specified index range [from,to)
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>segment</CODE> - segment name<DD><CODE>from</CODE> - begin index<DD><CODE>to</CODE> - end index
<DT><B>Returns:</B><DD>int    total size</DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public java.lang.String <B>toString</B>()</PRE>
<DL>
<DD>HL7 Message String
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>toString</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="toHex()"><!-- --></A><H3>
toHex</H3>
<PRE>
public java.lang.String <B>toHex</B>()</PRE>
<DL>
<DD>Output Hex format's HL7 message
<P>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/uit/bee/hl7/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Message.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../../../com/uit/bee/hl7/Segment.html" title="class in com.uit.bee.hl7"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?com/uit/bee/hl7/Message.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Message.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
